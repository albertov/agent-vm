--- a/src/mcp_proxy/__main__.py
+++ b/src/mcp_proxy/__main__.py
@@ -208,6 +208,11 @@ def _add_arguments_to_parser(parser: argparse.ArgumentParser) -> None:
             "Default is no CORS allowed."
         ),
     )
+    mcp_server_group.add_argument(
+        "--server-prefix",
+        default="/servers",
+        help="URL prefix for named servers. Default is '/servers'",
+    )


 def _setup_logging(*, debug: bool) -> logging.Logger:
@@ -384,6 +389,7 @@ def _create_mcp_settings(args_parsed: argparse.Namespace) -> MCPServerSettings:
         stateless=args_parsed.stateless,
         allow_origins=args_parsed.allow_origin if len(args_parsed.allow_origin) > 0 else None,
         log_level="DEBUG" if args_parsed.debug else "INFO",
+        server_prefix=args_parsed.server_prefix,
     )


--- a/src/mcp_proxy/mcp_server.py
+++ b/src/mcp_proxy/mcp_server.py
@@ -32,6 +32,7 @@ class MCPServerSettings:
     stateless: bool = False
     allow_origins: list[str] | None = None
     log_level: Literal["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"] = "INFO"
+    server_prefix: str = "/servers"


 # To store last activity for multiple servers if needed, though status endpoint is global for now.
@@ -178,7 +179,7 @@ async def run_mcp_server(
             )  # Manage lifespan by calling run()

             # Mount these routes under /servers/<name>/
-            server_mount = Mount(f"/servers/{name}", routes=instance_routes_named)
+            server_mount = Mount(f"{mcp_settings.server_prefix}/{name}", routes=instance_routes_named)
             all_routes.append(server_mount)
             _global_status["server_instances"][name] = "configured"

@@ -217,7 +218,7 @@ async def run_mcp_server(
             sse_urls.append(f"{base_url}/sse")

         # Add named servers
-        sse_urls.extend([f"{base_url}/servers/{name}/sse" for name in named_server_params])
+        sse_urls.extend([f"{base_url}{mcp_settings.server_prefix}/{name}/sse" for name in named_server_params])

         # Display the SSE URLs prominently
         if sse_urls:
